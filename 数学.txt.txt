# 线性方程、矩阵、特征向量

# 1.行列式

性质：性质1  行列式与它的转置行列式相等
       注：行列式中行与列具有同等的地位,行列式的性质凡是对行成立的对列也同样成立.

性质2  互换行列式的两行（列）,行列式变号
推论  如果行列式有两行（列）完全相同，则此行列式为零

![image-20220120153941848](C:\Users\Administrator\AppData\Roaming\Typora\typora-user-images\image-20220120153941848.png)

性质3  行列式的某一行（列）中所有的元素都乘以同一个倍数k，等于用数k乘以此行列式.
推论    行列式的某一行（列）中所有元素的公因子可以提到行列式符号的外面．

![image-20220120153627175](C:\Users\Administrator\AppData\Roaming\Typora\typora-user-images\image-20220120153627175.png)

性质4  行列式中如果有两行（列）元素成比例，则此行列式为零．

性质5  若行列式的某一列（行）的元素都是两数之和,则等于对应的两个行列式之和.





## 1.1二阶行列式

   计算方式：对角线法则

![img](https://img-blog.csdn.net/20161127170020443) 

## 1.2三阶行列式

![image-20220120151318840](C:\Users\Administrator\AppData\Roaming\Typora\typora-user-images\image-20220120151318840.png)

> 3阶的就是想办法让下面三个数变成零然后斜对角划分，结果就是斜对角的相乘
>
> 变成0的步骤：
>
> 1.先用第二行减去第一行的倍数使得第二行第一个先为0
>
> 2.用第一行来解决第三行第一个为0
>
> 3.用第二行解决第三行第二个
>
> 总结：第一行可以使得某一行(除本身那行)为0，第二行可以使第二个数字为0，以此类推

###  1.3n阶

![image-20220120153000066](C:\Users\Administrator\AppData\Roaming\Typora\typora-user-images\image-20220120153000066.png)

以斜对角为分界下部分全变为0然后计算

### 2.矩阵

#### 2.1加减

![image-20220120160137857](C:\Users\Administrator\AppData\Roaming\Typora\typora-user-images\image-20220120160137857.png)

#### 2.2矩阵相乘

> 方法：前行(决定新的矩阵的行数)乘后列(决定新矩阵的列数)
>
> 新矩阵的第一行第一列是由第一个矩阵的第一行和第二个矩阵的第一列组成
>
> ​                    一       二               一					一 	 	二					二
>
> ![image-20220120160729072](C:\Users\Administrator\AppData\Roaming\Typora\typora-user-images\image-20220120160729072.png)

<img src="C:\Users\Administrator\AppData\Roaming\Typora\typora-user-images\image-20220120164134324.png" alt="image-20220120164134324" style="zoom: 80%;" />

#### 2.3矩阵取绝对值

![image-20220120164820125](C:\Users\Administrator\AppData\Roaming\Typora\typora-user-images\image-20220120164820125.png)

> n取n阶层

#### 2.4逆矩阵

逆矩阵：设A为n阶方阵，存在同阶方阵B，使得AB=BA=E，则A的逆矩阵`A^-1 = B`

- 未必所有方阵均可逆，比如零矩阵
- 如果方阵可逆，逆矩阵唯一















































































































***



# 常见距离

#### 1、欧式距离（欧几里得距离）

欧式距离是最易理解的距离定义，即各坐标点的坐标之差的平方和相加，然后开根号。
二维平面上点![img](https://oscimg.oschina.net/oscnet/bedb8ca08b651e131e7721c2e3dbd2d0abe.jpg) 与点![img](https://oscimg.oschina.net/oscnet/4147314260ca19d4e7526a4b41a54b7271b.jpg) 之间的距离公式是：

![img](https://oscimg.oschina.net/oscnet/d1ac73aa3cd6ca3e21d623e6d304991667c.jpg)

n维空间上点![img](https://oscimg.oschina.net/oscnet/7fb5644b0809747510cd122ca363ca538ed.jpg) 和点![img](https://oscimg.oschina.net/oscnet/d00ffd777e3d3ed03919a0c0a2bebc3f9ba.jpg) 之间的距离公式是：

![img](https://oscimg.oschina.net/oscnet/9cdd906e9769eb194b53582891e638474d5.jpg)

#### 2.闵可夫斯基距离

闵氏距离是多种距离的概括性描述。
两个n维的点![img](https://oscimg.oschina.net/oscnet/c441c0e1199ccacca1d45a2f523d628832a.jpg) 与![img](https://oscimg.oschina.net/oscnet/f01b4f3bb10b94dda26cf3a9ca13484f81e.jpg) 之间的闵式距离可以定义为：

![img](https://oscimg.oschina.net/oscnet/11a08e85f99178292dc71b8431602ec694b.jpg)

当p![img](https://oscimg.oschina.net/oscnet/01ef709e69d1a044b9351bd6a3ae5c46a56.jpg) 1的时候，上述公式即为曼哈顿距离；
当p![img](https://oscimg.oschina.net/oscnet/01ef709e69d1a044b9351bd6a3ae5c46a56.jpg) 2的时候，上述公式即为欧式距离；
当![img](https://oscimg.oschina.net/oscnet/eb09d574152a09dee6f5f8891a2bbc397f4.jpg)的 时候，上述公式即为切比雪夫距离。

#### 3.余弦相似度

余弦相似度用于衡量两个向量之间的相似程度，衡量的标准是两向量之间夹角的余弦值。已知向量![img](https://oscimg.oschina.net/oscnet/3f085038e5400aa73bb48cbb52d567840cd.jpg) 与向量![img](https://oscimg.oschina.net/oscnet/b220fca0bcb2099af7ab64a876fd64d3f2f.jpg) 的内积表示为：

![img](https://oscimg.oschina.net/oscnet/a0462c22f4a61531ed8cc715b83f110fec3.jpg)

则可以得到余弦相似度为：

![img](https://oscimg.oschina.net/oscnet/3f3c7f108175166280e99d8f66f784e240b.jpg)

***



# 中心化

1.**Min-Max标准化**
![在这里插入图片描述](https://img-blog.csdnimg.cn/20200114123120129.png)
Min-Max标准化是指对原始数据进行线性变换，将值映射到[0，1]之间

2.**BOX-COX变换**

box-cox变换是统计建模中的一项常用变换。即方差稳定变换。用于连续的因变量不满足[正态分布](https://so.csdn.net/so/search?q=正态分布&spm=1001.2101.3001.7020)的情况。

box-cox的变换一般形式为：

![img](https://img-blog.csdnimg.cn/2021071211220784.png)

# 统计知识

#### 1.t检验

检验目的：在样本中比较连续变量的平均数，以检验均值之间的差异是否大于能被所解释的差异。
样本均值有差异，总体之间确实存在差异的概率是多少？

单样本t检验
检验某个连续变量的样本均数与给定总体的已知均数相比，其差异是否显著
如周岁儿童的平均身高是否为75厘米
数据要求：小样本时来自的总体服从正态分布，如果大样本或者是数据收集的时候没有特殊性，可以忽略正态分布的假设。

独立样本t检验
根据两独立样本的数据，对两总体均值是否有显著差异进行推断。
如某证券公司调查到散户股民买进、卖出和投资的有关数据，要检验文化程度高的股民和文化程度低的股民各项指标均值有所不同
数据要求：样本来自的总体服从正态分布
两样本必须相互独立，即抽取其中一批样本对抽取另一批样本没有任何影响，两组样本的个案数可以不相等。
要求两样本是大样本，小样本则必须来自正态总体。

方差齐性检验
用来检验不同组的总体方差是否相等
在一些统计推断的过程，要求进行比较的两组或多住数据的方差相等，即要求方差齐性，如君子比较，方差分析。

配对样本t检验
对同一样本进行两次测试所获得的两组数据，或对两个完全相同的样本的不同条件下进行测试所得的两组数据，判断两组数据是否有差异
如某种减肥茶是否有效
数据要求：
两样本数据必须两两配对，即样本个数相同，个案顺序相同
两总体服从正太分布（小样本情况下），样本容量>30情况下， 且数据收集是随机的，可以认为服从正态分布。

### 2.f检验

样本标准偏差的平方，即：

![img](https://img-blog.csdnimg.cn/2018111512242492.png)

两组数据就能得到两个S2值

![img](https://img-blog.csdnimg.cn/20181115122450493.png)

然后计算的F值与查表得到的F表值比较，如果

F < F表 表明两组数据没有显著差异；

F ≥ F表 表明两组数据存在显著差异。



通常的F检验例子包括：

假设一系列服从正态分布的母体，都有相同的标准差。这是最典型的F检验，该检验在方差分析（ANOVA）中也非常重要。

假设一个回归模型很好地符合其数据集要求。

### 3.正态检验

**（1）Shapiro-Wilk test**
方法：scipy.stats.shapiro(x)
官方文档：SciPy v1.1.0 Reference Guide
参数：x - 待检验数据
返回：W - 统计数；p-value - p值

```python
print('统计数和P-Value',scipy.stats.shapiro(L_tm))
统计数和P-Value (0.9865770936012268, 0.233174666762352)
```

**（2）scipy.stats.kstest**
方法：scipy.stats.kstest (rvs, cdf, args = ( ), N = 20, alternative =‘two-sided’, mode =‘approx’)
官方文档：SciPy v0.14.0 Reference Guide
参数：rvs - 待检验数据，可以是字符串、数组；
cdf - 需要设置的检验，这里设置为 norm，也就是正态性检验；
alternative - 设置单双尾检验，默认为 two-sided
返回：W - 统计数；p-value - p值

```python
u=np.mean(L_tm)
std=np.std(L_tm)
print(scipy.stats.kstest (L_tm, 'norm', args = (u,std)))
KstestResult(statistic=0.06385348427883908, pvalue=0.6645320172840661)

```

3. Anderson-Darling test
  方法：scipy.stats.anderson (x, dist =‘norm’ )
  该方法是由 scipy.stats.kstest 改进而来的，可以做正态分布、指数分布、Logistic 分布、Gumbel 分布等多种分布检验。默认参数为 norm，即正态性检验。
  官方文档：SciPy v1.1.0 Reference Guide
  参数：x - 待检验数据；dist - 设置需要检验的分布类型
  返回：statistic - 统计数；critical_values - 评判值；significance_level - 显著性水平

  ```python
  print(scipy.stats.anderson (L_tm, dist ='norm' ))
  
  AndersonResult(statistic=0.5201038826714353, critical_values=array([0.56 , 0.637, 0.765, 0.892, 1.061]), significance_level=array([15. , 10. ,  5. ,  2.5,  1. ]))
  ```

  （4）scipy.stats.normaltest
  方法：scipy.stats.normaltest (a, axis=0)
  官方文档：SciPy v0.14.0 Reference Guide
  参数：a - 待检验数据；axis - 可设置为整数或置空，如果设置为 none，则待检验数据被当作单独的数据集来进行检验。该值默认为 0，即从 0 轴开始逐行进行检验。
  返回：k2 - s^2 + k^2，s 为 skewtest 返回的 z-score，k 为 kurtosistest 返回的 z-score，即标准化值；p-value - p值

  ```python
  print(scipy.stats.normaltest (L_tm, axis=0))
  
  NormaltestResult(statistic=2.703801433319236, pvalue=0.2587479863488212)
  ```

  

  ## 4.卡方检验

卡方检验：统计样本的实际观测值与理论推断值之间的偏离程度，实际观测值与理论推断值之间的偏离程度就决定卡方值的大小，如果卡方值越大，二者偏差程度越大；反之，二者偏差越小；若两个值完全相等时，卡方值就为0，表明理论值完全符合。

例子：一枚硬币投50次，根据观察结果判断硬币是否均横，即正反面出现概率是否一样。



|          | 正   | 反   |
| -------- | ---- | ---- |
| 实际次数 | 28   | 22   |
| 理论次数 | 25   | 25   |


卡方值计算公式：![img](https://private.codecogs.com/gif.latex?X%5E2%3D%5Csum_%7Bi%3D1%7D%5En%5Cfrac%7B%28real-theory%29%5E2%7D%7Btheory%7D)，即(28-25)^2/25+(22-25)^2/25=0.72，再根据自由度和置信度查表对比，此处自由度跟T检验不一样，它是(表格行数-1)*（表格列数-1）=(2-1)*(2-1)=1。同样的，卡方值也是越小越说明差异性不显著。

F检验和T检验都是定量检验，F检验比T检验计算更简单，卡方检验是定类检验。
